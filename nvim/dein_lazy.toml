[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = ['python']

[[plugins]]
repo = 'tell-k/vim-autopep8'
hook_add = '''
  let g:autopep8_disable_show_diff=1
  let g:autopep8_on_save = 1
'''
on_ft = ['python']

[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = ['md']

[[plugins]]
repo = 'vim-scripts/a.vim'
on_ft = ['c', 'cpp']
hook_source = '''
  nnoremap <silent> <leader>aa :A<CR>
  nnoremap <silent> <leader>at :AT<CR>
  nnoremap <silent> <leader>av :AV<CR>
'''

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = 'cpp'
hook_add = """
  function! CPPCodeCleanup()
   let l:lines='all'
   let g:clang_format_fallback_style = 'Google'
   :pyf /usr/share/clang/clang-format-6.0/clang-format.py
  endfunction
  command! CPPCodeCleanup call CPPCodeCleanup()
  autocmd BufWrite *.cpp,*.h,*.cc :CPPCodeCleanup
"""

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_event = 'InsertCharPre'
on_ft = 'snippet'
depends = 'context_filetype.vim'
hook_source = '''
" source ~/.config/nvim/plugins/neosnippet.rc.vim
  let g:neosnippet#enable_snipmate_compatibility = 1
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
      set conceallevel=2 concealcursor=niv
  endif
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
